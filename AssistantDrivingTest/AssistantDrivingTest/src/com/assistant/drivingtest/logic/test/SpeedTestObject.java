package com.assistant.drivingtest.logic.test;import android.content.Context;import com.assistant.drivingtest.R;import com.assistant.drivingtest.domain.Deduction;import com.assistant.drivingtest.domain.ThirdTestItem;import com.assistant.drivingtest.logic.ThirdSubjectTestManager;import com.assistant.drivingtest.utils.Constant;import com.assistant.drivingtest.utils.LogUtil;import com.assistant.drivingtest.utils.MapUtil;import com.baidu.mapapi.map.LocationData;public class SpeedTestObject extends TestObject {	public SpeedTestObject(Context context,			ThirdSubjectTestManager testManager, ThirdTestItem item) {		super(context, testManager, item);		// mHandler.sendEmptyMessageDelayed(SUCCESS, 10000);	}	@Override	public void setAzimuth(double azimuth) {	}	@Override	public void setLocation(LocationData locationData) {		int dis = MapUtil.getDistanceInt(locationData.latitude,				locationData.longitude, mTestItem.voiceLatitude,				mTestItem.voiceLongitude);		int disEnd = MapUtil.getDistanceInt(locationData.latitude,				locationData.longitude, mTestItem.endLatitude,				mTestItem.endLongitude);		if (dis > Constant.DISTANCE_STANDARD) {			mHandler.removeMessages(FAIL);			Deduction deduction = new Deduction();			deduction.name = mTestItem.name;			deduction.reason = mContext					.getString(R.string.deduction_message_speed);			deduction.scores = -100;			mTestManager.testFail(deduction);		} else if (disEnd <= Constant.DISTANCE_OK) {			mTestManager.testSuccess();		}	}	@Override	public void setSpeed(double speed) {		LogUtil.d("zxh", "current speed:" + speed + " mTestItem speed:"				+ mTestItem.speed);		if (speed > mTestItem.speed) {			mHandler.removeMessages(SUCCESS);			Deduction deduction = new Deduction();			deduction.name = mTestItem.name;			deduction.reason = mContext					.getString(R.string.deduction_message_speed);			deduction.scores = -100;			mTestManager.testFail(deduction);		}	}}